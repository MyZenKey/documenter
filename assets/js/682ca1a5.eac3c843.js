"use strict";(self.webpackChunkdevpub=self.webpackChunkdevpub||[]).push([[5622],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),s=u(t),f=o,m=s["".concat(c,".").concat(f)]||s[f]||p[f]||i;return t?r.createElement(m,a(a({ref:n},l),{},{components:t})):r.createElement(m,a({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=s;var d={};for(var c in n)hasOwnProperty.call(n,c)&&(d[c]=n[c]);d.originalType=e,d.mdxType="string"==typeof e?e:o,a[1]=d;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},4292:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return s}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],d={sidebar_position:3},c="Configuring Client ID on Android",u={unversionedId:"android/quickstart/android-configure-your-client-id",id:"android/quickstart/android-configure-your-client-id",isDocsHomePage:!1,title:"Configuring Client ID on Android",description:"The ZenKey SDK manifest contains a placeholder for clientId. In order to compile an app with the ZenKey SDK, register the clientId placeholder value in the app build.gradle. Replace MYCLIENTID by the value obtained in the previous step.",source:"@site/docs/android/quickstart/android-configure-your-client-id.md",sourceDirName:"android/quickstart",slug:"/android/quickstart/android-configure-your-client-id",permalink:"/documenter/docs/android/quickstart/android-configure-your-client-id",editUrl:"https://github.com/MyZenKey/documenter/edit/main/docs/android/quickstart/android-configure-your-client-id.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Adding the SDK to a project on Android",permalink:"/documenter/docs/android/quickstart/android-add-the-sdk-to-a-project"},next:{title:"Adding ZenKey Button on Android",permalink:"/documenter/docs/android/quickstart/android-add-the-zenkey-button"}},l=[],p={toc:l};function s(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuring-client-id-on-android"},"Configuring Client ID on Android"),(0,i.kt)("p",null,"The ZenKey SDK manifest contains a placeholder for ",(0,i.kt)("inlineCode",{parentName:"p"},"clientId"),". In order to compile an app with the ZenKey SDK, register the ",(0,i.kt)("inlineCode",{parentName:"p"},"clientId")," placeholder value in the app ",(0,i.kt)("inlineCode",{parentName:"p"},"build.gradle"),". Replace ",(0,i.kt)("inlineCode",{parentName:"p"},"MY_CLIENT_ID")," by the value obtained in the previous step."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-groovy"},"android {\n    defaultConfig {\n        manifestPlaceholders = [zenKeyClientId: 'MY_CLIENT_ID']\n    }\n}\n")))}s.isMDXComponent=!0}}]);