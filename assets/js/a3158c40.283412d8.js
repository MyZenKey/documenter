"use strict";(self.webpackChunkdevpub=self.webpackChunkdevpub||[]).push([[8607],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return f}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=n.createContext({}),c=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=c(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},l=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),l=c(t),f=i,m=l["".concat(u,".").concat(f)]||l[f]||p[f]||o;return t?n.createElement(m,a(a({ref:r},s),{},{components:t})):n.createElement(m,a({ref:r},s))}));function f(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=l;var d={};for(var u in r)hasOwnProperty.call(r,u)&&(d[u]=r[u]);d.originalType=e,d.mdxType="string"==typeof e?e:i,a[1]=d;for(var c=2;c<o;c++)a[c]=t[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}l.displayName="MDXCreateElement"},1112:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return d},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return l}});var n=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],d={sidebar_position:13},u="Creating Custom Redirect URI for Android",c={unversionedId:"android/integration-guide/android-creating-a-custom-redirect-uri",id:"android/integration-guide/android-creating-a-custom-redirect-uri",isDocsHomePage:!1,title:"Creating Custom Redirect URI for Android",description:"By default, the ZenKey SDK uses and registers a default redirect URI in the form of ://com.xci.zenkey.sdk. For every request made using the ZenKey SDK, the corresponding AuthorizationResponse contains the redirect URI used for the request.",source:"@site/docs/android/integration-guide/android-creating-a-custom-redirect-uri.md",sourceDirName:"android/integration-guide",slug:"/android/integration-guide/android-creating-a-custom-redirect-uri",permalink:"/documenter/docs/android/integration-guide/android-creating-a-custom-redirect-uri",editUrl:"https://github.com/MyZenKey/documenter/edit/main/docs/android/integration-guide/android-creating-a-custom-redirect-uri.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Handling Authorization Responses on Android",permalink:"/documenter/docs/android/integration-guide/android-handling-authorization-responses"},next:{title:"Overriding Default Redirect URI for Android",permalink:"/documenter/docs/android/integration-guide/android-override-the-default-redirect-uri"}},s=[],p={toc:s};function l(e){var r=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"creating-custom-redirect-uri-for-android"},"Creating Custom Redirect URI for Android"),(0,o.kt)("p",null,"By default, the ZenKey SDK uses and registers a default redirect URI in the form of ",(0,o.kt)("inlineCode",{parentName:"p"},"<clientId>://com.xci.zenkey.sdk"),". For every request made using the ZenKey SDK, the corresponding ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthorizationResponse")," contains the redirect URI used for the request."),(0,o.kt)("p",null,"To use a custom redirect URI, override the default value in your manifest and specify the custom redirect URI for your request with ",(0,o.kt)("inlineCode",{parentName:"p"},"ZenKeyButton")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"identityProvider"),". Additionally,  ensure that your custom redirect URI is ",(0,o.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc3986"},"valid"),"."))}l.isMDXComponent=!0}}]);