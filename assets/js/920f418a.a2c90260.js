"use strict";(self.webpackChunkdevpub=self.webpackChunkdevpub||[]).push([[2014],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(t),f=o,m=p["".concat(u,".").concat(f)]||p[f]||l[f]||i;return t?r.createElement(m,a(a({ref:n},s),{},{components:t})):r.createElement(m,a({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3570:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return s},default:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={sidebar_position:21},u="Configuring Access Token Requests for Android",d={unversionedId:"android/integration-guide/android-configure-access-token-requests",id:"android/integration-guide/android-configure-access-token-requests",isDocsHomePage:!1,title:"Configuring Access Token Requests for Android",description:"With the user\u2019s consent in the form of an authorization code, your secure server will request an access token from the token_endpoint discovered earlier. Information on setting up your secure server can be found in integration options on the web.",source:"@site/docs/android/integration-guide/android-configure-access-token-requests.md",sourceDirName:"android/integration-guide",slug:"/android/integration-guide/android-configure-access-token-requests",permalink:"/documenter/docs/android/integration-guide/android-configure-access-token-requests",editUrl:"https://github.com/MyZenKey/documenter/edit/main/docs/android/integration-guide/android-configure-access-token-requests.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21},sidebar:"tutorialSidebar",previous:{title:"Enabling Debug Logging on Android",permalink:"/documenter/docs/android/integration-guide/android-enabling-debug-logging"},next:{title:"Access Token Response",permalink:"/documenter/docs/android/integration-guide/android-access-token-response"}},s=[],l={toc:s};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuring-access-token-requests-for-android"},"Configuring Access Token Requests for Android"),(0,i.kt)("p",null,"With the user\u2019s consent in the form of an authorization code, your secure server will request an access token from the ",(0,i.kt)("inlineCode",{parentName:"p"},"token_endpoint")," discovered earlier. Information on setting up your secure server can be found in ",(0,i.kt)("a",{parentName:"p",href:"doc:web-integration-options"},"integration options on the web"),"."),(0,i.kt)("p",null,"To configure this request:  "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Base64 encode your ",(0,i.kt)("inlineCode",{parentName:"li"},"client_id")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"client_secret"),":")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"        Base64Encode(\u201c{client_id}:{client_secret}\u201d) \n")),(0,i.kt)("p",null,"Note: When you retrieve your client_secret from the ZenKey Developer Portal, store your client_secret on your secure backend and restrict access only to those who need it."),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Insert this encoded value in your Authorization header:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"        'Authorization': \"Basic {encoded_value_here}\"\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Specify the ",(0,i.kt)("inlineCode",{parentName:"li"},"Content-Type")," as URL-encoded:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"        Content-Type: application/x-www-form-urlencoded\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Then include the following parameters in the body of your token request:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    grant_type="authorization_code"\n    code="{auth_code}"\n    redirect_uri="{auth_redirect_uri}"\n    \n')),(0,i.kt)("p",null,"Here are all the components working together:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"POST /token HTTP/1.1\nHost: mno.com\nAuthorization: Basic {encoded_value_here}\nContent-Type: application/x-www-form-urlencoded\n\n    grant_type=authorization_code\n    &redirect_uri=https://www.client.com\n    &code={auth_code}\n   \n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"POST /token HTTP/1.1\nHost: mno.com\nAuthorization: Basic {encoded_value_here}\nContent-Type: application/x-www-form-urlencoded\n\n    grant_type=authorization_code\n    &redirect_uri=https://www.client.com\n    &code={auth_code}\n    &code_verifier={codeVerifier}\n")))}p.isMDXComponent=!0}}]);